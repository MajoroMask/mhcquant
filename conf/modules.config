/*
========================================================================================
    Config file for defining DSL2 per module options
========================================================================================
    Available keys to override module options:
        args            = Additional arguments appended to command in module.
        args2           = Second set of arguments appended to command in module (multi-tool modules).
        args3           = Third set of arguments appended to command in module (multi-tool modules).
        publish_dir     = Directory to publish results.
        publish_by_meta = Groovy list of keys available in meta map to append as directories to "publish_dir" path
                            If publish_by_meta = true                 - Value of ${meta['id']} is appended as a directory to "publish_dir" path
                            If publish_by_meta = ['id', 'custompath'] - If "id" is in meta map and "custompath" isn't then "${meta['id']}/custompath/"
                                                                        is appended as a directory to "publish_dir" path
                            If publish_by_meta = false / null         - No directories are appended to "publish_dir" path
        publish_files   = Groovy map where key = "file_ext" and value = "directory" to publish results for that file extension
                            The value of "directory" is appended to the standard "publish_dir" path as defined above.
                            If publish_files = null (unspecified)     - All files are published.
                            If publish_files = false                  - No files are published.
        suffix          = File name suffix for output files.
----------------------------------------------------------------------------------------
*/

params {
    modules {

        'generate_proteins_from_vcf' {
            args= "-t ${params.variant_annotation_style} -r ${params.variant_reference}"
        }

        'multiqc' {
            args            = ''
            publish_dir     = "multiqc/"
        }

        'openms_map_aligner_identification' {
            args = "-model:type linear -algorithm:max_rt_shift ${params.max_rt_alignment_shift} "
        }

        'openms_comet_adapter' {
            args = "-precursor_mass_tolerance ${params.precursor_mass_tolerance} -fragment_mass_tolerance ${params.fragment_mass_tolerance} -fragment_bin_offset ${params.fragment_bin_offset} -num_hits ${params.num_hits} -digest_mass_range ${params.digest_mass_range} -max_variable_mods_in_peptide ${params.number_mods} -missed_cleavages 0 -precursor_charge ${params.prec_charge} -activation_method ${params.activation_method} -variable_modifications ${params.variable_mods.tokenize(',').collect { "'${it}'" }.join(" ") } -fixed_modifications ${params.fixed_mods.tokenize(',').collect { "'${it}'"}.join(" ")} -enzyme '${params.enzyme}' -spectrum_batch_size ${params.spectrum_batch_size} "
        }

        'openms_id_filter' {
            args = "-remove_decoys -precursor:length '${params.peptide_min_length}:${params.peptide_max_length}' -delete_unreferenced_peptide_hits "
        }

        'openms_id_filter_refiner' {
            args = "-remove_decoys -precursor:length '${params.peptide_min_length}:${params.peptide_max_length}' -delete_unreferenced_peptide_hits "
            suffix = "perc_subset_filtered"
        }

        'openms_id_filter_whitelist' {
            args = "-whitelist:ignore_modifications -whitelist:peptides "
            suffix = "pred_filtered"
        }

        'openms_mztab_exporter_perc' {
            suffix = "all_ids_merged_psm_perc_filtered"
        }

        'openms_mztab_exporter_psm' {
            suffix = "all_ids_merged"
        }

        'openms_percolator_adapter' {
            args = "-seed 4711 -trainFDR 0.05 -testFDR 0.05 -enzyme no_enzyme -subset_max_train ${params.subset_max_train} -doc ${params.description_correct_features} "
            suffix = "all_ids_merged_psm_perc"
        }

        'openms_percolator_adapter_refine' {
            args = "-seed 4711 -trainFDR 0.05 -testFDR 0.05 -enzyme no_enzyme -subset_max_train ${params.subset_max_train} -doc ${params.description_correct_features} "
            suffix = "perc_subset"
        }

        'openms_rt_predict_peptides' {
            suffix = "_id_files_for_rt_prediction_RTpredicted"
        }

        'openms_rt_predict_neo_epitopes' {
            suffix = "_txt_file_for_rt_prediction_RTpredicted"
        }

    }
}
