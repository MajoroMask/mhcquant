/*
 * --------------------------------------------------
 *  Config file for defining DSL2 per module options
 * --------------------------------------------------
 *
 *   Available keys to override module options:
 *       args           = Additional arguments appended to command in module.
 *       args2          = Second set of arguments appended to command in module (multi-tool modules).
 *       publish_dir    = Directory to publish results.
 *       publish_by_id  = Publish results in separate folders by meta.id value.
 *       publish_files  = Groovy map where key = "file_ext" and value = "directory" to publish results for that file extension
 *                        The value of "directory" is appended to the standard "publish_dir" path as defined above.
 *                        If publish_files == null (unspecified)  - All files are published.
 *                        If publish_files == false               - No files are published.
 *       suffix         = File name suffix for output files.
 *
 */

params {
    modules {
        /*
         * 'fastqc' {
         *    args = "--quiet"
         * }
         * 'multiqc' {
         *    args = ""
         *}
         */
        
        'openms_map_aligner_identification' {
            args = "-model:type linear -algorithm:max_rt_shift ${params.max_rt_alignment_shift}"
        }

        'openms_comet_adapter' {
            args = "-precursor_mass_tolerance ${params.precursor_mass_tolerance} -fragment_bin_tolerance ${params.fragment_mass_tolerance} -fragment_bin_offset ${params.fragment_bin_offset} -num_hits ${params.num_hits} -digest_mass_range ${params.digest_mass_range} -max_variable_mods_in_peptide ${params.number_mods} -allowed_missed_cleavages 0 -precursor_charge ${params.prec_charge} -activation_method ${params.activation_method} -variable_modifications ${params.variable_mods.tokenize(',').collect { "'${it}'" }.join(" ") } -fixed_modifications ${params.fixed_mods.tokenize(',').collect { "'${it}'"}.join(" ")} -enzyme '${params.enzyme}' -spectrum_batch_size ${params.spectrum_batch_size}"
        }
    }
}